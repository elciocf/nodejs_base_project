import { inject, injectable } from "tsyringe";

import { AppError } from "@shared/errors/AppError";

import { I{{entityPlural}}Repository } from "@modules/{{module}}/repositories/I{{entityPlural}}Repository";

interface IRequest {
{{#each fields}}
  {{#ifEquals @key ../entity_pk}}
    {{@key}}?: {{this}};  
  {{/ifEquals}}
{{/each}}
}

@injectable()
class {{useCaseNamePascal}}UseCase {
    constructor(
        @inject("{{entityPlural}}Repository")
        private {{entityPluralLower}}Repository: I{{entityPlural}}Repository
    ) {}

    async execute({ {{entity_pk}} } : IRequest ): Promise<{{entity}}> {
        // check if has pk_field
        if (!{{entity_pk}}) {
            throw new AppError(
                "O c√≥digo PK da {{entity}} deve ser informado."
            );
        }

        const {{entity}} = await this.{{entityPluralLower}}Repository.getByPK({{entity_pk}});
        return {{entity}};
        
    }
}

export { {{useCaseNamePascal}}UseCase };