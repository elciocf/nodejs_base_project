import { inject, injectable } from "tsyringe";

import { {{entity}} } from "@modules/{{module}}/entities/{{modulePascal}}";
import { I{{entity}}Repository } from "@modules/{{module}}/repositories/I{{modulePascal}}Repository";

interface IRequest {
    {{#each fields}}
    {{#ifEquals @key ../entity_pk}}
        {{@key}}?: {{this}};
    {{else}}
        {{@key}}: {{this}};
    {{/ifEquals}}
    {{/each}}    
}

@injectable()
class {{useCaseNamePascal}}UseCase {
    constructor(
        @inject("{{modulePascal}}Repository")
        private {{entityLower}}Repository: I{{modulePascal}}Repository
    ) {}

    async execute(data: IRequest): Promise<{{entity}}> {
        
        const new{{entity}} = await this.{{entityLower}}Repository.create(data);
        return new{{entity}};
    }
}

export { {{useCaseNamePascal}}UseCase };